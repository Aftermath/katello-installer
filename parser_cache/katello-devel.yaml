---
:version: 1
:files:
  capsule:
    :data:
      :values:
        parent_fqdn: capsule::params::parent_fqdn
        certs_tar: capsule::params::certs_tar
        pulp_master: capsule::params::pulp_master
        pulp_admin_password: capsule::params::pulp_admin_password
        pulp_oauth_effective_user: capsule::params::pulp_oauth_effective_user
        pulp_oauth_key: capsule::params::pulp_oauth_key
        pulp_oauth_secret: capsule::params::pulp_oauth_secret
        puppet: capsule::params::puppet
        puppet_ca_proxy: capsule::params::puppet_ca_proxy
        puppet_server_implementation: :undef
        reverse_proxy: capsule::params::reverse_proxy
        reverse_proxy_port: capsule::params::reverse_proxy_port
        rhsm_url: capsule::params::rhsm_url
        qpid_router: capsule::params::qpid_router
        qpid_router_hub_addr: capsule::params::qpid_router_hub_addr
        qpid_router_hub_port: capsule::params::qpid_router_hub_port
        qpid_router_agent_addr: capsule::params::qpid_router_agent_addr
        qpid_router_agent_port: capsule::params::qpid_router_agent_port
        qpid_router_broker_addr: capsule::params::qpid_router_broker_addr
        qpid_router_broker_port: capsule::params::qpid_router_broker_port
        enable_ostree: capsule::params::enable_ostree
      :validations:
      - !ruby/object:KafoParsers::Validation
        name: validate_bool
        arguments:
        - $enable_ostree
      - !ruby/object:KafoParsers::Validation
        name: validate_present
        arguments:
        - $capsule::parent_fqdn
      :parameters:
      - parent_fqdn
      - certs_tar
      - pulp_master
      - pulp_admin_password
      - pulp_oauth_effective_user
      - pulp_oauth_key
      - pulp_oauth_secret
      - puppet
      - puppet_ca_proxy
      - puppet_server_implementation
      - reverse_proxy
      - reverse_proxy_port
      - rhsm_url
      - qpid_router
      - qpid_router_hub_addr
      - qpid_router_hub_port
      - qpid_router_agent_addr
      - qpid_router_agent_port
      - qpid_router_broker_addr
      - qpid_router_broker_port
      - enable_ostree
      :docs:
        parent_fqdn:
        - FQDN of the parent node.
        enable_ostree:
        - Boolean to enable ostree plugin. This requires existence of an ostree install.
        certs_tar:
        - Path to a tar with certs for the node
        puppet:
        - Use puppet
        puppet_ca_proxy:
        - The actual server that handles puppet CA.
        - Setting this to anything non-empty causes
        - the apache vhost to set up a proxy for all
        - certificates pointing to the value.
        puppet_server_implementation:
        - Puppet master implementation, either "master" (traditional
        - Ruby) or "puppetserver" (JVM-based)
        pulp_master:
        - Whether the capsule should be identified as a pulp master server
        pulp_admin_password:
        - Password for the Pulp admin user. It should be left blank so that a random
          password is generated
        pulp_oauth_effective_user:
        - User to be used for Pulp REST interaction
        pulp_oauth_key:
        - OAuth key to be used for Pulp REST interaction
        pulp_oauth_secret:
        - OAuth secret to be used for Pulp REST interaction
        reverse_proxy:
        - Add reverse proxy to the parent
        reverse_proxy_port:
        - Reverse proxy listening port
        rhsm_url:
        - The URL that the RHSM API is rooted at
        qpid_router:
        - Configure qpid dispatch router
        qpid_router_hub_addr:
        - Address for dispatch router hub
        qpid_router_hub_port:
        - Port for dispatch router hub
        qpid_router_agent_addr:
        - Listener address for goferd agents
        qpid_router_agent_port:
        - Listener port for goferd agents
        qpid_router_broker_addr:
        - Address of qpidd broker to connect to
        qpid_router_broker_port:
        - Port of qpidd broker to connect to
      :types:
        enable_ostree: boolean
        puppet: boolean
        reverse_proxy: boolean
        qpid_router: boolean
      :groups:
        parent_fqdn:
        - 'Class: capsule'
        - 'Parameters:'
        enable_ostree:
        - 'Class: capsule'
        - 'Parameters:'
        certs_tar:
        - 'Class: capsule'
        - 'Parameters:'
        puppet:
        - 'Class: capsule'
        - 'Parameters:'
        puppet_ca_proxy:
        - 'Class: capsule'
        - 'Parameters:'
        puppet_server_implementation:
        - 'Class: capsule'
        - 'Parameters:'
        pulp_master:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_admin_password:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_oauth_effective_user:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_oauth_key:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_oauth_secret:
        - 'Class: capsule'
        - 'Advanced parameters:'
        reverse_proxy:
        - 'Class: capsule'
        - 'Advanced parameters:'
        reverse_proxy_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
        rhsm_url:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_hub_addr:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_hub_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_agent_addr:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_agent_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_broker_addr:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_broker_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
      :conditions:
        parent_fqdn: 
        enable_ostree: 
        certs_tar: 
        puppet: 
        puppet_ca_proxy: 
        puppet_server_implementation: 
        pulp_master: 
        pulp_admin_password: 
        pulp_oauth_effective_user: 
        pulp_oauth_key: 
        pulp_oauth_secret: 
        reverse_proxy: 
        reverse_proxy_port: 
        rhsm_url: 
        qpid_router: 
        qpid_router_hub_addr: 
        qpid_router_hub_port: 
        qpid_router_agent_addr: 
        qpid_router_agent_port: 
        qpid_router_broker_addr: 
        qpid_router_broker_port: 
      :object_type: hostclass
    :mtime: 1473690437
  certs:
    :data:
      :values:
        log_dir: certs::params::log_dir
        node_fqdn: certs::params::node_fqdn
        generate: certs::params::generate
        regenerate: certs::params::regenerate
        regenerate_ca: certs::params::regenerate_ca
        deploy: certs::params::deploy
        ca_common_name: certs::params::ca_common_name
        country: certs::params::country
        state: certs::params::state
        city: certs::params::city
        org: certs::params::org
        org_unit: certs::params::org_unit
        expiration: certs::params::expiration
        ca_expiration: certs::params::ca_expiration
        server_cert: certs::params::server_cert
        server_key: certs::params::server_key
        server_cert_req: certs::params::server_cert_req
        server_ca_cert: certs::params::server_ca_cert
        pki_dir: certs::params::pki_dir
        ssl_build_dir: certs::params::ssl_build_dir
        user: certs::params::user
        group: certs::params::group
        default_ca_name: certs::params::default_ca_name
        server_ca_name: certs::params::server_ca_name
      :validations: []
      :parameters:
      - log_dir
      - node_fqdn
      - generate
      - regenerate
      - regenerate_ca
      - deploy
      - ca_common_name
      - country
      - state
      - city
      - org
      - org_unit
      - expiration
      - ca_expiration
      - server_cert
      - server_key
      - server_cert_req
      - server_ca_cert
      - pki_dir
      - ssl_build_dir
      - user
      - group
      - default_ca_name
      - server_ca_name
      :docs:
        log_dir:
        - When the log files should go
        node_fqdn:
        - The fqdn of the host the generated certificates
        - should be for
        generate:
        - Should the generation of the certs be part of the
        - configuration
        regenerate:
        - Force regeneration of the certificates (excluding
        - ca certificates)
        regenerate_ca:
        - Force regeneration of the ca certificate
        deploy:
        - Deploy the certs on the configured system. False means
        - we want apply it on a different system
        ca_common_name:
        - Common name for the generated CA certificate
        country:
        - Country attribute for managed certificates
        state:
        - State attribute for managed certificates
        city:
        - City attribute for managed certificates
        org:
        - Org attribute for managed certificates
        org_unit:
        - Org unit attribute for managed certificates
        expiration:
        - Expiration attribute for managed certificates
        ca_expiration:
        - Ca expiration attribute for managed certificates
        server_ca_cert:
        - Path to the CA that issued the ssl certificates for https
        - if not specified, the default CA will be used
        server_cert:
        - Path to the ssl certificate for https
        - if not specified, the default CA will generate one
        server_key:
        - Path to the ssl key for https
        - if not specified, the default CA will generate one
        server_cert_req:
        - Path to the ssl certificate request for https
        pki_dir:
        - The PKI directory under which to place certs
        ssl_build_dir:
        - The directory where SSL keys, certs and RPMs will be generated
        user:
        - The system user name who should own the certs;
        group:
        - The group who should own the certs;
        default_ca_name:
        - The name of the default CA
        server_ca_name:
        - The name of the server CA (used for https)
      :types:
        generate: boolean
        regenerate: boolean
        regenerate_ca: boolean
        deploy: boolean
        ca_common_name: string
        country: string
        state: string
        city: string
        org: string
        org_unit: string
        expiration: string
        ca_expiration: string
      :groups:
        log_dir:
        - 'Class: certs'
        - 'Parameters:'
        node_fqdn:
        - 'Class: certs'
        - 'Parameters:'
        generate:
        - 'Class: certs'
        - 'Parameters:'
        regenerate:
        - 'Class: certs'
        - 'Parameters:'
        regenerate_ca:
        - 'Class: certs'
        - 'Parameters:'
        deploy:
        - 'Class: certs'
        - 'Parameters:'
        ca_common_name:
        - 'Class: certs'
        - 'Parameters:'
        country:
        - 'Class: certs'
        - 'Parameters:'
        state:
        - 'Class: certs'
        - 'Parameters:'
        city:
        - 'Class: certs'
        - 'Parameters:'
        org:
        - 'Class: certs'
        - 'Parameters:'
        org_unit:
        - 'Class: certs'
        - 'Parameters:'
        expiration:
        - 'Class: certs'
        - 'Parameters:'
        ca_expiration:
        - 'Class: certs'
        - 'Parameters:'
        server_ca_cert:
        - 'Class: certs'
        - 'Parameters:'
        server_cert:
        - 'Class: certs'
        - 'Parameters:'
        server_key:
        - 'Class: certs'
        - 'Parameters:'
        server_cert_req:
        - 'Class: certs'
        - 'Parameters:'
        pki_dir:
        - 'Class: certs'
        - 'Parameters:'
        ssl_build_dir:
        - 'Class: certs'
        - 'Parameters:'
        user:
        - 'Class: certs'
        - 'Parameters:'
        group:
        - 'Class: certs'
        - 'Parameters:'
        default_ca_name:
        - 'Class: certs'
        - 'Parameters:'
        server_ca_name:
        - 'Class: certs'
        - 'Parameters:'
      :conditions:
        log_dir: 
        node_fqdn: 
        generate: 
        regenerate: 
        regenerate_ca: 
        deploy: 
        ca_common_name: 
        country: 
        state: 
        city: 
        org: 
        org_unit: 
        expiration: 
        ca_expiration: 
        server_ca_cert: 
        server_cert: 
        server_key: 
        server_cert_req: 
        pki_dir: 
        ssl_build_dir: 
        user: 
        group: 
        default_ca_name: 
        server_ca_name: 
      :object_type: hostclass
    :mtime: 1473690931
  katello_devel:
    :data:
      :values:
        user: katello_devel::params::user
        oauth_key: katello_devel::params::oauth_key
        oauth_secret: katello_devel::params::oauth_secret
        deployment_dir: katello_devel::params::deployment_dir
        post_sync_token: katello_devel::params::post_sync_token
        db_type: katello_devel::params::db_type
        mongodb_path: katello_devel::params::mongodb_path
        use_rvm: katello_devel::params::use_rvm
        rvm_ruby: katello_devel::params::rvm_ruby
        use_passenger: katello_devel::params::use_passenger
        initial_organization: katello_devel::params::initial_organization
        initial_location: katello_devel::params::initial_location
        admin_password: katello_devel::params::admin_password
        enable_ostree: katello::params::enable_ostree
        candlepin_event_queue: katello_devel::params::candlepin_event_queue
        github_username: katello_devel::params::github_username
        use_ssh_fork: katello_devel::params::use_ssh_fork
        fork_remote_name: katello_devel::params::fork_remote_name
        upstream_remote_name: katello_devel::params::upstream_remote_name
        extra_plugins: katello_devel::params::extra_plugins
      :validations:
      - !ruby/object:KafoParsers::Validation
        name: validate_bool
        arguments:
        - $enable_ostree
      - !ruby/object:KafoParsers::Validation
        name: validate_string
        arguments:
        - $upstream_remote_name
      - !ruby/object:KafoParsers::Validation
        name: validate_array
        arguments:
        - $extra_plugins
      - !ruby/object:KafoParsers::Validation
        name: validate_string
        arguments:
        - $github_username
      :parameters:
      - user
      - oauth_key
      - oauth_secret
      - deployment_dir
      - post_sync_token
      - db_type
      - mongodb_path
      - use_rvm
      - rvm_ruby
      - use_passenger
      - initial_organization
      - initial_location
      - admin_password
      - enable_ostree
      - candlepin_event_queue
      - github_username
      - use_ssh_fork
      - fork_remote_name
      - upstream_remote_name
      - extra_plugins
      :docs:
        user:
        - The Katello system user name
        deployment_dir:
        - Location to deploy Katello to in development
        oauth_key:
        - The oauth key for talking to the candlepin API;
        - default 'katello'
        oauth_secret:
        - The oauth secret for talking to the candlepin API;
        post_sync_token:
        - The shared secret for pulp notifying katello about
        - completed syncs
        use_passenger:
        - Whether to use Passenger in development;
        - default false
        db_type:
        - The database type; 'postgres' or 'sqlite'
        mongodb_path:
        - Path where mongodb should be stored
        use_rvm:
        - If set to true, will install and configure RVM
        rvm_ruby:
        - The default Ruby version to use with RVM
        initial_organization:
        - Initial organization to be created
        initial_location:
        - Initial location to be created
        admin_password:
        - Admin user password for Web application
        enable_ostree:
        - Boolean to enable ostree plugin. This requires existence of an ostree install.
        candlepin_event_queue:
        - The queue to use for candlepin
        github_username:
        - Github username to add remotes for
        use_ssh_fork:
        - If true, will use SSH to configure Github fork, otherwise HTTPS.
        fork_remote_name:
        - Name of the remote that represents your fork
        upstream_remote_name:
        - Name of the remove that represents the upstream repository
        extra_plugins:
        - Array of Github namespace/repo plugins to setup and configure from git
      :types:
        enable_ostree: boolean
        use_ssh_fork: boolean
        extra_plugins: array
      :groups:
        user:
        - 'Class: katello_devel'
        - 'Parameters:'
        deployment_dir:
        - 'Class: katello_devel'
        - 'Parameters:'
        oauth_key:
        - 'Class: katello_devel'
        - 'Parameters:'
        oauth_secret:
        - 'Class: katello_devel'
        - 'Parameters:'
        post_sync_token:
        - 'Class: katello_devel'
        - 'Parameters:'
        use_passenger:
        - 'Class: katello_devel'
        - 'Parameters:'
        db_type:
        - 'Class: katello_devel'
        - 'Parameters:'
        mongodb_path:
        - 'Class: katello_devel'
        - 'Parameters:'
        use_rvm:
        - 'Class: katello_devel'
        - 'Parameters:'
        rvm_ruby:
        - 'Class: katello_devel'
        - 'Parameters:'
        initial_organization:
        - 'Class: katello_devel'
        - 'Parameters:'
        initial_location:
        - 'Class: katello_devel'
        - 'Parameters:'
        admin_password:
        - 'Class: katello_devel'
        - 'Parameters:'
        enable_ostree:
        - 'Class: katello_devel'
        - 'Parameters:'
        candlepin_event_queue:
        - 'Class: katello_devel'
        - 'Parameters:'
        github_username:
        - 'Class: katello_devel'
        - 'Parameters:'
        use_ssh_fork:
        - 'Class: katello_devel'
        - 'Parameters:'
        fork_remote_name:
        - 'Class: katello_devel'
        - 'Parameters:'
        upstream_remote_name:
        - 'Class: katello_devel'
        - 'Parameters:'
        extra_plugins:
        - 'Class: katello_devel'
        - 'Parameters:'
      :conditions:
        user: 
        deployment_dir: 
        oauth_key: 
        oauth_secret: 
        post_sync_token: 
        use_passenger: 
        db_type: 
        mongodb_path: 
        use_rvm: 
        rvm_ruby: 
        initial_organization: 
        initial_location: 
        admin_password: 
        enable_ostree: 
        candlepin_event_queue: 
        github_username: 
        use_ssh_fork: 
        fork_remote_name: 
        upstream_remote_name: 
        extra_plugins: 
      :object_type: hostclass
    :mtime: 1473874555
