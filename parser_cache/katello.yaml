---
:version: 1
:files:
  capsule:
    :data:
      :values:
        parent_fqdn: capsule::params::parent_fqdn
        certs_tar: capsule::params::certs_tar
        pulp_master: capsule::params::pulp_master
        pulp_admin_password: capsule::params::pulp_admin_password
        pulp_oauth_effective_user: capsule::params::pulp_oauth_effective_user
        pulp_oauth_key: capsule::params::pulp_oauth_key
        pulp_oauth_secret: capsule::params::pulp_oauth_secret
        puppet: capsule::params::puppet
        puppet_ca_proxy: capsule::params::puppet_ca_proxy
        puppet_server_implementation: :undef
        reverse_proxy: capsule::params::reverse_proxy
        reverse_proxy_port: capsule::params::reverse_proxy_port
        rhsm_url: capsule::params::rhsm_url
        qpid_router: capsule::params::qpid_router
        qpid_router_hub_addr: capsule::params::qpid_router_hub_addr
        qpid_router_hub_port: capsule::params::qpid_router_hub_port
        qpid_router_agent_addr: capsule::params::qpid_router_agent_addr
        qpid_router_agent_port: capsule::params::qpid_router_agent_port
        qpid_router_broker_addr: capsule::params::qpid_router_broker_addr
        qpid_router_broker_port: capsule::params::qpid_router_broker_port
        enable_ostree: capsule::params::enable_ostree
      :validations:
      - !ruby/object:KafoParsers::Validation
        name: validate_bool
        arguments:
        - $enable_ostree
      - !ruby/object:KafoParsers::Validation
        name: validate_present
        arguments:
        - $capsule::parent_fqdn
      :parameters:
      - parent_fqdn
      - certs_tar
      - pulp_master
      - pulp_admin_password
      - pulp_oauth_effective_user
      - pulp_oauth_key
      - pulp_oauth_secret
      - puppet
      - puppet_ca_proxy
      - puppet_server_implementation
      - reverse_proxy
      - reverse_proxy_port
      - rhsm_url
      - qpid_router
      - qpid_router_hub_addr
      - qpid_router_hub_port
      - qpid_router_agent_addr
      - qpid_router_agent_port
      - qpid_router_broker_addr
      - qpid_router_broker_port
      - enable_ostree
      :docs:
        parent_fqdn:
        - FQDN of the parent node.
        enable_ostree:
        - Boolean to enable ostree plugin. This requires existence of an ostree install.
        certs_tar:
        - Path to a tar with certs for the node
        puppet:
        - Use puppet
        puppet_ca_proxy:
        - The actual server that handles puppet CA.
        - Setting this to anything non-empty causes
        - the apache vhost to set up a proxy for all
        - certificates pointing to the value.
        puppet_server_implementation:
        - Puppet master implementation, either "master" (traditional
        - Ruby) or "puppetserver" (JVM-based)
        pulp_master:
        - Whether the capsule should be identified as a pulp master server
        pulp_admin_password:
        - Password for the Pulp admin user. It should be left blank so that a random
          password is generated
        pulp_oauth_effective_user:
        - User to be used for Pulp REST interaction
        pulp_oauth_key:
        - OAuth key to be used for Pulp REST interaction
        pulp_oauth_secret:
        - OAuth secret to be used for Pulp REST interaction
        reverse_proxy:
        - Add reverse proxy to the parent
        reverse_proxy_port:
        - Reverse proxy listening port
        rhsm_url:
        - The URL that the RHSM API is rooted at
        qpid_router:
        - Configure qpid dispatch router
        qpid_router_hub_addr:
        - Address for dispatch router hub
        qpid_router_hub_port:
        - Port for dispatch router hub
        qpid_router_agent_addr:
        - Listener address for goferd agents
        qpid_router_agent_port:
        - Listener port for goferd agents
        qpid_router_broker_addr:
        - Address of qpidd broker to connect to
        qpid_router_broker_port:
        - Port of qpidd broker to connect to
      :types:
        enable_ostree: boolean
        puppet: boolean
        reverse_proxy: boolean
        qpid_router: boolean
      :groups:
        parent_fqdn:
        - 'Class: capsule'
        - 'Parameters:'
        enable_ostree:
        - 'Class: capsule'
        - 'Parameters:'
        certs_tar:
        - 'Class: capsule'
        - 'Parameters:'
        puppet:
        - 'Class: capsule'
        - 'Parameters:'
        puppet_ca_proxy:
        - 'Class: capsule'
        - 'Parameters:'
        puppet_server_implementation:
        - 'Class: capsule'
        - 'Parameters:'
        pulp_master:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_admin_password:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_oauth_effective_user:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_oauth_key:
        - 'Class: capsule'
        - 'Advanced parameters:'
        pulp_oauth_secret:
        - 'Class: capsule'
        - 'Advanced parameters:'
        reverse_proxy:
        - 'Class: capsule'
        - 'Advanced parameters:'
        reverse_proxy_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
        rhsm_url:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_hub_addr:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_hub_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_agent_addr:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_agent_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_broker_addr:
        - 'Class: capsule'
        - 'Advanced parameters:'
        qpid_router_broker_port:
        - 'Class: capsule'
        - 'Advanced parameters:'
      :conditions:
        parent_fqdn: 
        enable_ostree: 
        certs_tar: 
        puppet: 
        puppet_ca_proxy: 
        puppet_server_implementation: 
        pulp_master: 
        pulp_admin_password: 
        pulp_oauth_effective_user: 
        pulp_oauth_key: 
        pulp_oauth_secret: 
        reverse_proxy: 
        reverse_proxy_port: 
        rhsm_url: 
        qpid_router: 
        qpid_router_hub_addr: 
        qpid_router_hub_port: 
        qpid_router_agent_addr: 
        qpid_router_agent_port: 
        qpid_router_broker_addr: 
        qpid_router_broker_port: 
      :object_type: hostclass
    :mtime: 1473690437
  certs:
    :data:
      :values:
        log_dir: certs::params::log_dir
        node_fqdn: certs::params::node_fqdn
        generate: certs::params::generate
        regenerate: certs::params::regenerate
        regenerate_ca: certs::params::regenerate_ca
        deploy: certs::params::deploy
        ca_common_name: certs::params::ca_common_name
        country: certs::params::country
        state: certs::params::state
        city: certs::params::city
        org: certs::params::org
        org_unit: certs::params::org_unit
        expiration: certs::params::expiration
        ca_expiration: certs::params::ca_expiration
        server_cert: certs::params::server_cert
        server_key: certs::params::server_key
        server_cert_req: certs::params::server_cert_req
        server_ca_cert: certs::params::server_ca_cert
        pki_dir: certs::params::pki_dir
        ssl_build_dir: certs::params::ssl_build_dir
        user: certs::params::user
        group: certs::params::group
        default_ca_name: certs::params::default_ca_name
        server_ca_name: certs::params::server_ca_name
      :validations: []
      :parameters:
      - log_dir
      - node_fqdn
      - generate
      - regenerate
      - regenerate_ca
      - deploy
      - ca_common_name
      - country
      - state
      - city
      - org
      - org_unit
      - expiration
      - ca_expiration
      - server_cert
      - server_key
      - server_cert_req
      - server_ca_cert
      - pki_dir
      - ssl_build_dir
      - user
      - group
      - default_ca_name
      - server_ca_name
      :docs:
        log_dir:
        - When the log files should go
        node_fqdn:
        - The fqdn of the host the generated certificates
        - should be for
        generate:
        - Should the generation of the certs be part of the
        - configuration
        regenerate:
        - Force regeneration of the certificates (excluding
        - ca certificates)
        regenerate_ca:
        - Force regeneration of the ca certificate
        deploy:
        - Deploy the certs on the configured system. False means
        - we want apply it on a different system
        ca_common_name:
        - Common name for the generated CA certificate
        country:
        - Country attribute for managed certificates
        state:
        - State attribute for managed certificates
        city:
        - City attribute for managed certificates
        org:
        - Org attribute for managed certificates
        org_unit:
        - Org unit attribute for managed certificates
        expiration:
        - Expiration attribute for managed certificates
        ca_expiration:
        - Ca expiration attribute for managed certificates
        server_ca_cert:
        - Path to the CA that issued the ssl certificates for https
        - if not specified, the default CA will be used
        server_cert:
        - Path to the ssl certificate for https
        - if not specified, the default CA will generate one
        server_key:
        - Path to the ssl key for https
        - if not specified, the default CA will generate one
        server_cert_req:
        - Path to the ssl certificate request for https
        pki_dir:
        - The PKI directory under which to place certs
        ssl_build_dir:
        - The directory where SSL keys, certs and RPMs will be generated
        user:
        - The system user name who should own the certs;
        group:
        - The group who should own the certs;
        default_ca_name:
        - The name of the default CA
        server_ca_name:
        - The name of the server CA (used for https)
      :types:
        generate: boolean
        regenerate: boolean
        regenerate_ca: boolean
        deploy: boolean
        ca_common_name: string
        country: string
        state: string
        city: string
        org: string
        org_unit: string
        expiration: string
        ca_expiration: string
      :groups:
        log_dir:
        - 'Class: certs'
        - 'Parameters:'
        node_fqdn:
        - 'Class: certs'
        - 'Parameters:'
        generate:
        - 'Class: certs'
        - 'Parameters:'
        regenerate:
        - 'Class: certs'
        - 'Parameters:'
        regenerate_ca:
        - 'Class: certs'
        - 'Parameters:'
        deploy:
        - 'Class: certs'
        - 'Parameters:'
        ca_common_name:
        - 'Class: certs'
        - 'Parameters:'
        country:
        - 'Class: certs'
        - 'Parameters:'
        state:
        - 'Class: certs'
        - 'Parameters:'
        city:
        - 'Class: certs'
        - 'Parameters:'
        org:
        - 'Class: certs'
        - 'Parameters:'
        org_unit:
        - 'Class: certs'
        - 'Parameters:'
        expiration:
        - 'Class: certs'
        - 'Parameters:'
        ca_expiration:
        - 'Class: certs'
        - 'Parameters:'
        server_ca_cert:
        - 'Class: certs'
        - 'Parameters:'
        server_cert:
        - 'Class: certs'
        - 'Parameters:'
        server_key:
        - 'Class: certs'
        - 'Parameters:'
        server_cert_req:
        - 'Class: certs'
        - 'Parameters:'
        pki_dir:
        - 'Class: certs'
        - 'Parameters:'
        ssl_build_dir:
        - 'Class: certs'
        - 'Parameters:'
        user:
        - 'Class: certs'
        - 'Parameters:'
        group:
        - 'Class: certs'
        - 'Parameters:'
        default_ca_name:
        - 'Class: certs'
        - 'Parameters:'
        server_ca_name:
        - 'Class: certs'
        - 'Parameters:'
      :conditions:
        log_dir: 
        node_fqdn: 
        generate: 
        regenerate: 
        regenerate_ca: 
        deploy: 
        ca_common_name: 
        country: 
        state: 
        city: 
        org: 
        org_unit: 
        expiration: 
        ca_expiration: 
        server_ca_cert: 
        server_cert: 
        server_key: 
        server_cert_req: 
        pki_dir: 
        ssl_build_dir: 
        user: 
        group: 
        default_ca_name: 
        server_ca_name: 
      :object_type: hostclass
    :mtime: 1473690931
  katello:
    :data:
      :values:
        user: katello::params::user
        group: katello::params::group
        user_groups: katello::params::user_groups
        oauth_key: katello::params::oauth_key
        oauth_secret: katello::params::oauth_secret
        post_sync_token: katello::params::post_sync_token
        num_pulp_workers: katello::params::num_pulp_workers
        log_dir: katello::params::log_dir
        config_dir: katello::params::config_dir
        proxy_url: katello::params::proxy_url
        proxy_port: katello::params::proxy_port
        proxy_username: katello::params::proxy_username
        proxy_password: katello::params::proxy_password
        cdn_ssl_version: katello::params::cdn_ssl_version
        package_names: katello::params::package_names
        enable_ostree: katello::params::enable_ostree
        max_keep_alive: katello::params::max_keep_alive
        repo_export_dir: katello::params::repo_export_dir
      :validations:
      - !ruby/object:KafoParsers::Validation
        name: validate_bool
        arguments:
        - $enable_ostree
      - !ruby/object:KafoParsers::Validation
        name: validate_integer
        arguments:
        - $max_keep_alive
      - !ruby/object:KafoParsers::Validation
        name: validate_absolute_path
        arguments:
        - $repo_export_dir
      :parameters:
      - user
      - group
      - user_groups
      - oauth_key
      - oauth_secret
      - post_sync_token
      - num_pulp_workers
      - log_dir
      - config_dir
      - proxy_url
      - proxy_port
      - proxy_username
      - proxy_password
      - cdn_ssl_version
      - package_names
      - enable_ostree
      - max_keep_alive
      - repo_export_dir
      :docs:
        user:
        - The Katello system user name
        group:
        - The Katello system user group
        user_groups:
        - Extra user groups the Katello user is a part of
        oauth_key:
        - The oauth key for talking to the candlepin API
        oauth_secret:
        - The oauth secret for talking to the candlepin API
        post_sync_token:
        - The shared secret for pulp notifying katello about
        - completed syncs
        log_dir:
        - Location for Katello log files to be placed
        config_dir:
        - Location for Katello config files
        proxy_url:
        - URL of the proxy server
        proxy_port:
        - Port the proxy is running on
        proxy_username:
        - Proxy username for authentication
        proxy_password:
        - Proxy password for authentication
        cdn_ssl_version:
        - SSL version used to communicate with the CDN. Optional. Use SSLv23 or TLSv1
        num_pulp_workers:
        - Number of pulp workers to use
        package_names:
        - Packages that this module ensures are present instead of the default
        enable_ostree:
        - Boolean to enable ostree plugin. This requires existence of an ostree install.
        max_keep_alive:
        - Maximum number of requests to use for the apache MaxKeepAliveRequests parameter
        - on the virtualHost for port 443.
        repo_export_dir:
        - Directory to create for repository exports
      :types:
        enable_ostree: boolean
        max_keep_alive: integer
      :groups:
        user:
        - 'Class: katello'
        - 'Parameters:'
        group:
        - 'Class: katello'
        - 'Parameters:'
        user_groups:
        - 'Class: katello'
        - 'Parameters:'
        oauth_key:
        - 'Class: katello'
        - 'Parameters:'
        oauth_secret:
        - 'Class: katello'
        - 'Parameters:'
        post_sync_token:
        - 'Class: katello'
        - 'Parameters:'
        log_dir:
        - 'Class: katello'
        - 'Parameters:'
        config_dir:
        - 'Class: katello'
        - 'Parameters:'
        proxy_url:
        - 'Class: katello'
        - 'Parameters:'
        proxy_port:
        - 'Class: katello'
        - 'Parameters:'
        proxy_username:
        - 'Class: katello'
        - 'Parameters:'
        proxy_password:
        - 'Class: katello'
        - 'Parameters:'
        cdn_ssl_version:
        - 'Class: katello'
        - 'Parameters:'
        num_pulp_workers:
        - 'Class: katello'
        - 'Parameters:'
        package_names:
        - 'Class: katello'
        - 'Parameters:'
        enable_ostree:
        - 'Class: katello'
        - 'Parameters:'
        max_keep_alive:
        - 'Class: katello'
        - 'Parameters:'
        repo_export_dir:
        - 'Class: katello'
        - 'Parameters:'
      :conditions:
        user: 
        group: 
        user_groups: 
        oauth_key: 
        oauth_secret: 
        post_sync_token: 
        log_dir: 
        config_dir: 
        proxy_url: 
        proxy_port: 
        proxy_username: 
        proxy_password: 
        cdn_ssl_version: 
        num_pulp_workers: 
        package_names: 
        enable_ostree: 
        max_keep_alive: 
        repo_export_dir: 
      :object_type: hostclass
    :mtime: 1473691124
